#!/bin/bash

declare -A hosts
hosts=(
    [artem]=artem
    [ci]=ci
    [ci_localhost]=ci_localhost
    [demo]=demo
    [dev]=backend-dev
    [stg]=staging
)

declare -A services
services=(
    [funnel]=funnel
    [soap]=soap_srv
    [mm]=mm_srv
    [oneapi]=oneapi_srv
    [email]=email2sms
    [kelly]=kelly
    [just]=just
    [smppsink]=smppsink
    [ui]=poweralleyui
    [webmm]=webmm
)

if [[ $# < 2 ]]; then
    echo "Usage: deploy <HOST> <SERVICE> [VERSION]"
    echo "Where:"
    echo "  HOST: ${!hosts[@]}"
    echo "  SERVICE: ${!services[@]}"
    echo "  VERSION: by default from config file"
    exit 1
fi

host_alias=$1
service_alias=$2
version=$3

host_name=${hosts[$host_alias]}
if [[ -z ${host_name} ]]; then
    echo "Unknown host:" $host_alias
    exit 1
fi

service_name=${services[$service_alias]}
if [[ -z ${service_name} ]]; then
    echo "Unknown service:" $service_alias
    exit 1
fi

service_version=''
if [[ ! -z $version ]]; then
    service_version="--extra-vars ${service_name}_version=${version}"
fi

ansible all -i inventories/${host_name} -m ping || exit 1
ansible-playbook deploy.yml -i inventories/${host_name} --tags ${service_alias} ${service_version} || exit 1

if [[ $service_alias != "ui" ]] && [[ $service_alias != "webmm" ]] ; then
    ansible all -i inventories/${host_name} -s -U bms \
-m shell -a "/opt/${service_name}/bin/${service_name} stop; /opt/${service_name}/bin/${service_name} start"
fi
