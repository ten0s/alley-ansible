$ vagrant up

$ vagrant ssh-config
Host test1
  HostName 127.0.0.1
  User vagrant
  Port 2200
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /home/ten0s/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key
  IdentitiesOnly yes
  LogLevel FATAL

Host test2
  HostName 127.0.0.1
  User vagrant
  Port 2203
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /home/ten0s/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key
  IdentitiesOnly yes
  LogLevel FATAL

$ cat ansible.cfg
[defaults]
hostfile=inventory

$ cat inventory
[test1]
test1 ansible_ssh_host=127.0.0.1 ansible_ssh_port=2200 ansible_ssh_user=vagrant ansible_ssh_private_key_file=/home/ten0s/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key

[test2]
test2 ansible_ssh_host=127.0.0.1 ansible_ssh_port=2203 ansible_ssh_user=vagrant ansible_ssh_private_key_file=/home/ten0s/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key

[local:children]
test1
test2
...

$ ansible local -m ping
test1 | success >> {
    "changed": false,
    "ping": "pong"
}

test2 | success >> {
    "changed": false,
    "ping": "pong"
}

$ ansible local -s -m yum -a "name=tokyocabinet state=present"
test1 | success >> {
    "changed": true,
...
test2 | success >> {
    "changed": true,
...

$ ansible-playbook setup.yml
