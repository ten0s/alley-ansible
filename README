$ cd vagrant/test

$ vagrant up

$ vagrant ssh-config
Host test
  HostName 127.0.0.1
  User vagrant
  Port 2200
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile ~/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key
  IdentitiesOnly yes
  LogLevel FATAL

$ cd ../..

$ cat inventories/test
[test]
test ansible_ssh_host=127.0.0.1 ansible_ssh_port=2301 ansible_ssh_user=vagrant ansible_ssh_private_key_file=~/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key

$ ansible test -i inventories/test -m ping
test | success >> {
    "changed": false,
    "ping": "pong"
}

$ ansible-playbook provision-dev-env.yml -i inventories/test

$ ansible-playbook deploy.yml -i inventories/test --tags funnel,kelly,just

$ ansible all -i inventories/artem -m ping
$ ansible-playbook deploy.yml -i inventories/artem --tags kelly
$ ansible all -i inventories/artem -s -U bms -m shell -a '/opt/kelly/bin/kelly stop; /opt/kelly/bin/kelly start'
OR SIMPLY
$ ./deploy artem kelly

How to setup a test venue
=========================

$ ansible-playbook provision-test-env.yml -i inventories/HOST
