$ vagrant up

$ vagrant ssh-config
Host test1
  HostName 127.0.0.1
  User vagrant
  Port 2200
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /home/ten0s/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key
  IdentitiesOnly yes
  LogLevel FATAL

Host test2
  HostName 127.0.0.1
  User vagrant
  Port 2203
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /home/ten0s/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key
  IdentitiesOnly yes
  LogLevel FATAL

$ cat inventories/test
[test1]
test1 ansible_ssh_host=127.0.0.1 ansible_ssh_port=2200 ansible_ssh_user=vagrant ansible_ssh_private_key_file=/home/ten0s/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key

[test2]
test2 ansible_ssh_host=127.0.0.1 ansible_ssh_port=2203 ansible_ssh_user=vagrant ansible_ssh_private_key_file=/home/ten0s/.vagrant.d/boxes/ten0s-VAGRANTSLASH-centos6.5_x86_64/0/virtualbox/vagrant_private_key

[test:children]
test1
test2

$ ansible test -i inventories/test -m ping
test1 | success >> {
    "changed": false,
    "ping": "pong"
}

test2 | success >> {
    "changed": false,
    "ping": "pong"
}

$ ansible-playbook deploy.yml -i inventories/test
OR
$ ansible-playbook deploy.yml -i inventories/test --limit test1 --tags funnel,just
